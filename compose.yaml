version: '3.8'

services:
  db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    container_name: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: etl-dwh-server
    environment:
      - PORT=3000
    ports:
      - '3000:3000'
    depends_on:
      - db
      - kafka
    volumes:
      - .:/app
      - /app/node_modules

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'
    restart: always

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - '9093:9093'
    depends_on:
      - zookeeper
    restart: always

  debezium:
    image: debezium/connect:2.3
    platform: linux/amd64
    container_name: debezium
    environment:
      - BOOTSTRAP_SERVERS=kafka:9093
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my-connect-configs
      - OFFSET_STORAGE_TOPIC=my-connect-offsets
      - STATUS_STORAGE_TOPIC=my-connect-status
    ports:
      - '8083:8083'
    depends_on:
      - kafka
    restart: always

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    ports:
      - '27017:27017'
